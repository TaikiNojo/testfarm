{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { getPresaleAddress } from 'utils/addressHelpers';\nimport { getContract } from 'utils/web3';\nimport { buy, claim } from 'utils/callHelpers';\nimport presaleABI from 'config/abi/presale.json';\nimport useRefresh from './useRefresh';\nimport { usePresale } from './useContract';\nexport const useIsSaleActive = () => {\n  _s();\n\n  const [isSaleActive, setIsSaleActive] = useState(true);\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchIsSaleActive() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const isActive = await presaleContract.methods.isSaleActive().call();\n      setIsSaleActive(isActive);\n    }\n\n    fetchIsSaleActive();\n  }, [slowRefresh]);\n  return isSaleActive;\n};\n\n_s(useIsSaleActive, \"tXyB7o/SArul4s0MwuCNuk7npZk=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useIsClaimActive = () => {\n  _s2();\n\n  const [isClaimActive, setIsClaimActive] = useState(false);\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchIsClaimActive() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const isActive = await presaleContract.methods.isClaimActive().call();\n      setIsClaimActive(isActive);\n    }\n\n    fetchIsClaimActive();\n  }, [slowRefresh]);\n  return isClaimActive;\n};\n\n_s2(useIsClaimActive, \"jzDjBHiB0OMBGycYDdEUJyLSn5U=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useStartingTimeStamp = () => {\n  _s3();\n\n  const [startingTimeStamp, setStartingTimeStamp] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchStartingTimeStamp() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const timeStamp = await presaleContract.methods.presaleTimeEnds().call();\n      setStartingTimeStamp(new BigNumber(timeStamp));\n    }\n\n    fetchStartingTimeStamp();\n  }, [slowRefresh]);\n  return startingTimeStamp;\n};\n\n_s3(useStartingTimeStamp, \"uBXlx59XeDr2ugjISWwjYT0t2gw=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useTotalTokensSold = () => {\n  _s4();\n\n  const [totalTokensSold, setTotalTokensSold] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchTotalTokensSold() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const total = await presaleContract.methods.totalTokenSold().call();\n      setTotalTokensSold(new BigNumber(total));\n    }\n\n    fetchTotalTokensSold();\n  }, [slowRefresh]);\n  return totalTokensSold;\n};\n\n_s4(useTotalTokensSold, \"3d2xECilgVV56/XPbeDs0CWzcyk=\", false, function () {\n  return [useRefresh];\n});\n\nexport const usePricePerToken = () => {\n  _s5();\n\n  const [BUSDPerToken, setBUSDPerToken] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchBUSDPerToken() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const busdPerToken = await presaleContract.methods._price().call();\n      setBUSDPerToken(new BigNumber(busdPerToken));\n    }\n\n    fetchBUSDPerToken();\n  }, [slowRefresh]);\n  return BUSDPerToken;\n};\n\n_s5(usePricePerToken, \"GNPW5r4QzBJ8z/aLs8eHEKls2ok=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useGNTPerToken = () => {\n  _s6();\n\n  const [GNTPerToken, setGNTPerToken] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchBUSDPerToken() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const gntPerToken = await presaleContract.methods.GNTPerGIT().call();\n      setGNTPerToken(new BigNumber(gntPerToken));\n    }\n\n    fetchBUSDPerToken();\n  }, [slowRefresh]);\n  return GNTPerToken;\n};\n\n_s6(useGNTPerToken, \"OyhIzpKa7iGySQwwJe7GK0u9bAo=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useBUSDReceived = () => {\n  _s7();\n\n  const [BUSDReceived, setBUSDReceived] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchBUSDReceived() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const busdReceived = await presaleContract.methods.BUSDReceived().call();\n      setBUSDReceived(new BigNumber(busdReceived));\n    }\n\n    fetchBUSDReceived();\n  }, [slowRefresh]);\n  return BUSDReceived;\n};\n\n_s7(useBUSDReceived, \"14IFCCoZTTiyyG5fXXehbFJiO84=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useGNTReceived = () => {\n  _s8();\n\n  const [GNTReceived, setGNTReceived] = useState();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchBUSDReceived() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const gntReceived = await presaleContract.methods.GNTReceived().call();\n      setGNTReceived(new BigNumber(gntReceived));\n    }\n\n    fetchBUSDReceived();\n  }, [slowRefresh]);\n  return GNTReceived;\n};\n\n_s8(useGNTReceived, \"C0ucCUbmaA2kKubHZfRQveQ9CxE=\", false, function () {\n  return [useRefresh];\n});\n\nexport const useTokensOwned = () => {\n  _s9();\n\n  const [tokensOwned, setTokensOwned] = useState();\n  const {\n    account\n  } = useWallet();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchTokensOwned() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      const tokens = await presaleContract.methods.goldIngotOwned(account).call();\n      setTokensOwned(new BigNumber(tokens));\n    }\n\n    fetchTokensOwned();\n  }, [account, slowRefresh]);\n  return tokensOwned;\n};\n\n_s9(useTokensOwned, \"675EaKQs7Z7nPejB3TCemomBnOs=\", false, function () {\n  return [useWallet, useRefresh];\n});\n\nexport const useTokensUnclaimed = () => {\n  _s10();\n\n  const [tokensUnclaimed, setTokensUnclaimed] = useState();\n  const {\n    account\n  } = useWallet();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    async function fetchTokensUnclaimed() {\n      const presaleContract = getContract(presaleABI, getPresaleAddress());\n      let tokens;\n\n      try {\n        tokens = await presaleContract.methods.goldIngotUnclaimed(account).call();\n      } catch (e) {\n        tokens = 0;\n      }\n\n      setTokensUnclaimed(new BigNumber(tokens));\n    }\n\n    fetchTokensUnclaimed();\n  }, [account, slowRefresh]);\n  return tokensUnclaimed;\n};\n\n_s10(useTokensUnclaimed, \"k/mjBNxAa/pIJ5KhCM9S0XwBjsQ=\", false, function () {\n  return [useWallet, useRefresh];\n});\n\nexport const useBuy = () => {\n  _s11();\n\n  const {\n    account\n  } = useWallet();\n  const presaleChefContract = usePresale();\n  const handleBuy = useCallback(async (tokenAddress, amount) => {\n    const txHash = await buy(presaleChefContract, tokenAddress, amount, account);\n    console.info(txHash);\n  }, [account, presaleChefContract]);\n  return {\n    onBuy: handleBuy\n  };\n};\n\n_s11(useBuy, \"fDyLUuITc1ePKooOynwtd8pG9Tw=\", false, function () {\n  return [useWallet, usePresale];\n});\n\nexport const useClaim = () => {\n  _s12();\n\n  const {\n    account\n  } = useWallet();\n  const presaleChefContract = usePresale();\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await claim(presaleChefContract, account);\n      return txHash;\n    } catch (e) {\n      return 'fail';\n    }\n  }, [account, presaleChefContract]);\n  return {\n    onClaim: handleClaim\n  };\n};\n\n_s12(useClaim, \"OnGHg/0MBXijqf368kxRGL8WAJU=\", false, function () {\n  return [useWallet, usePresale];\n});","map":{"version":3,"sources":["/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/hooks/usePresale.ts"],"names":["useEffect","useState","useCallback","BigNumber","useWallet","getPresaleAddress","getContract","buy","claim","presaleABI","useRefresh","usePresale","useIsSaleActive","isSaleActive","setIsSaleActive","slowRefresh","fetchIsSaleActive","presaleContract","isActive","methods","call","useIsClaimActive","isClaimActive","setIsClaimActive","fetchIsClaimActive","useStartingTimeStamp","startingTimeStamp","setStartingTimeStamp","fetchStartingTimeStamp","timeStamp","presaleTimeEnds","useTotalTokensSold","totalTokensSold","setTotalTokensSold","fetchTotalTokensSold","total","totalTokenSold","usePricePerToken","BUSDPerToken","setBUSDPerToken","fetchBUSDPerToken","busdPerToken","_price","useGNTPerToken","GNTPerToken","setGNTPerToken","gntPerToken","GNTPerGIT","useBUSDReceived","BUSDReceived","setBUSDReceived","fetchBUSDReceived","busdReceived","useGNTReceived","GNTReceived","setGNTReceived","gntReceived","useTokensOwned","tokensOwned","setTokensOwned","account","fetchTokensOwned","tokens","goldIngotOwned","useTokensUnclaimed","tokensUnclaimed","setTokensUnclaimed","fetchTokensUnclaimed","goldIngotUnclaimed","e","useBuy","presaleChefContract","handleBuy","tokenAddress","amount","txHash","console","info","onBuy","useClaim","handleClaim","onClaim"],"mappings":"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","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { getPresaleAddress } from 'utils/addressHelpers'\r\nimport { getContract } from 'utils/web3'\r\nimport { buy, claim } from 'utils/callHelpers'\r\nimport presaleABI from 'config/abi/presale.json'\r\nimport useRefresh from './useRefresh'\r\nimport { usePresale } from './useContract'\r\n\r\n\r\nexport const useIsSaleActive = () => {\r\n    const [isSaleActive, setIsSaleActive] = useState<boolean>(true)\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchIsSaleActive() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const isActive = await presaleContract.methods.isSaleActive().call()\r\n            setIsSaleActive(isActive)\r\n        }\r\n        fetchIsSaleActive()\r\n    }, [slowRefresh])\r\n\r\n    return isSaleActive\r\n}\r\n\r\nexport const useIsClaimActive = () => {\r\n    const [isClaimActive, setIsClaimActive] = useState<boolean>(false)\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchIsClaimActive() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const isActive = await presaleContract.methods.isClaimActive().call()\r\n            setIsClaimActive(isActive)\r\n        }\r\n        fetchIsClaimActive()\r\n    }, [slowRefresh])\r\n\r\n    return isClaimActive\r\n}\r\n\r\nexport const useStartingTimeStamp = () => {\r\n    const [startingTimeStamp, setStartingTimeStamp] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchStartingTimeStamp() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const timeStamp = await presaleContract.methods.presaleTimeEnds().call()\r\n            setStartingTimeStamp(new BigNumber(timeStamp))\r\n        }\r\n        fetchStartingTimeStamp()\r\n    }, [slowRefresh])\r\n\r\n    return startingTimeStamp\r\n}\r\n\r\nexport const useTotalTokensSold = () => {\r\n    const [totalTokensSold, setTotalTokensSold] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchTotalTokensSold() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const total = await presaleContract.methods.totalTokenSold().call()\r\n            setTotalTokensSold(new BigNumber(total))\r\n        }\r\n        fetchTotalTokensSold()\r\n    }, [slowRefresh])\r\n\r\n    return totalTokensSold\r\n}\r\n\r\n\r\nexport const usePricePerToken  = () => {\r\n    const [BUSDPerToken, setBUSDPerToken] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchBUSDPerToken() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const busdPerToken = await presaleContract.methods._price().call()\r\n            setBUSDPerToken(new BigNumber(busdPerToken))\r\n        }\r\n        fetchBUSDPerToken()\r\n    }, [slowRefresh])\r\n\r\n    return BUSDPerToken\r\n}\r\n\r\nexport const useGNTPerToken = () => {\r\n    const [GNTPerToken, setGNTPerToken] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchBUSDPerToken() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const gntPerToken = await presaleContract.methods.GNTPerGIT().call()\r\n            setGNTPerToken(new BigNumber(gntPerToken))\r\n        }\r\n        fetchBUSDPerToken()\r\n    }, [slowRefresh])\r\n\r\n    return GNTPerToken\r\n}\r\n\r\nexport const useBUSDReceived = () => {\r\n    const [BUSDReceived, setBUSDReceived] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchBUSDReceived() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const busdReceived = await presaleContract.methods.BUSDReceived().call()\r\n            setBUSDReceived(new BigNumber(busdReceived))\r\n        }\r\n        fetchBUSDReceived()\r\n    }, [slowRefresh])\r\n\r\n    return BUSDReceived\r\n}\r\n\r\nexport const useGNTReceived = () => {\r\n    const [GNTReceived, setGNTReceived] = useState<BigNumber>()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchBUSDReceived() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const gntReceived = await presaleContract.methods.GNTReceived().call()\r\n            setGNTReceived(new BigNumber(gntReceived))\r\n        }\r\n        fetchBUSDReceived()\r\n    }, [slowRefresh])\r\n\r\n    return GNTReceived\r\n}\r\n\r\nexport const useTokensOwned = () => {\r\n    const [tokensOwned, setTokensOwned] = useState<BigNumber>()\r\n    const { account }: { account: string } = useWallet()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchTokensOwned() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            const tokens = await presaleContract.methods.goldIngotOwned(account).call()\r\n            setTokensOwned(new BigNumber(tokens))\r\n        }\r\n        fetchTokensOwned()\r\n    }, [account, slowRefresh])\r\n\r\n    return tokensOwned\r\n}\r\n\r\nexport const useTokensUnclaimed = () => {\r\n    const [tokensUnclaimed, setTokensUnclaimed] = useState<BigNumber>()\r\n    const { account }: { account: string } = useWallet()\r\n    const { slowRefresh } = useRefresh()\r\n\r\n    useEffect(() => {\r\n        async function fetchTokensUnclaimed() {\r\n            const presaleContract = getContract(presaleABI, getPresaleAddress())\r\n            let tokens\r\n            try {\r\n                tokens = await presaleContract.methods.goldIngotUnclaimed(account).call()\r\n            } catch(e) {\r\n                tokens = 0\r\n            }\r\n            setTokensUnclaimed(new BigNumber(tokens))\r\n        }\r\n        fetchTokensUnclaimed()\r\n    }, [account, slowRefresh])\r\n    \r\n    return tokensUnclaimed\r\n}\r\n\r\nexport const useBuy = () => {\r\n    const { account } = useWallet()\r\n    const presaleChefContract = usePresale()\r\n  \r\n    const handleBuy = useCallback(\r\n      async (tokenAddress: string, amount: string) => {\r\n        const txHash = await buy(presaleChefContract, tokenAddress, amount, account)\r\n        console.info(txHash)\r\n      },\r\n      [account, presaleChefContract],\r\n    )\r\n  \r\n    return { onBuy: handleBuy }\r\n}\r\n\r\nexport const useClaim = () => {\r\n    const { account } = useWallet()\r\n    const presaleChefContract = usePresale() \r\n\r\n    const handleClaim = useCallback(\r\n        async () => {\r\n            try {\r\n                const txHash = await claim(presaleChefContract, account)\r\n                return txHash\r\n            } catch(e) {\r\n                return 'fail'\r\n            }\r\n          \r\n        },\r\n        [account, presaleChefContract],\r\n      )\r\n    \r\n      return { onClaim: handleClaim }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}