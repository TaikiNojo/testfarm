{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Home/components/ReferralCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Card, CardBody, Heading, Text } from '@lukkasromero/cswap-uikit';\nimport { useReferralContract } from 'hooks/useContract';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport CardValue from './CardValue';\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content:space-between;\n`;\n_c = StyledTotalValueLockedCard;\n\nconst ReferralCard = () => {\n  _s();\n\n  const {\n    account\n  } = useWallet();\n  const [yourReferree, setYourReferree] = useState(\"-\");\n  const [yourEarnings, setYourEarnings] = useState(0);\n  const [yourTotalReferrals, setYourTotalReferrals] = useState(0);\n  const [myRefLink, setMyRefLink] = useState(\"hii\");\n  const referralContract = useReferralContract();\n  const loadData = useCallback(async () => {\n    if (referralContract && account) {\n      let _myReferral = await referralContract.methods.getReferrer(account).call();\n\n      const _myEarnings = await referralContract.methods.totalReferralCommissions(account).call();\n\n      const _myTotalReferrals = await referralContract.methods.referralsCount(account).call();\n\n      if (_myReferral === \"0x0000000000000000000000000000000000000000\") {\n        _myReferral = \"-\";\n      }\n\n      setYourReferree(_myReferral);\n      setYourEarnings(_myEarnings / 1e18);\n      setYourTotalReferrals(_myTotalReferrals);\n      setMyRefLink(`https://cswap.app?ref=${account}`);\n    }\n  }, [referralContract, account]);\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const copyRefLink = text => {\n    if (!account) {\n      alert(\"Please Connect Your Wallet First\");\n      return null;\n    }\n\n    const input = document.createElement('textarea');\n    input.innerHTML = text;\n    document.body.appendChild(input);\n    input.select();\n    const result = document.execCommand('copy');\n    document.body.removeChild(input);\n    alert(\"Referral Link copied\");\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTotalValueLockedCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: \"24px\",\n        children: \"Referral Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: \"Total Referral Earnings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          value: yourEarnings,\n          prefix: \"LOLI \",\n          decimals: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: \"Total Referrals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardValue, {\n          value: yourTotalReferrals,\n          prefix: \"\",\n          decimals: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: \"Your Referee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"20px\",\n          children: yourReferree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            copyRefLink(myRefLink);\n          },\n          children: \"Copy Your Referral Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReferralCard, \"Njm7vhS+q5tbc7FEL63iqPjMl30=\", false, function () {\n  return [useWallet, useReferralContract];\n});\n\n_c2 = ReferralCard;\nexport default ReferralCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTotalValueLockedCard\");\n$RefreshReg$(_c2, \"ReferralCard\");","map":{"version":3,"sources":["/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Home/components/ReferralCard.tsx"],"names":["React","useCallback","useEffect","useState","styled","Button","Card","CardBody","Heading","Text","useReferralContract","useWallet","CardValue","StyledTotalValueLockedCard","ReferralCard","account","yourReferree","setYourReferree","yourEarnings","setYourEarnings","yourTotalReferrals","setYourTotalReferrals","myRefLink","setMyRefLink","referralContract","loadData","_myReferral","methods","getReferrer","call","_myEarnings","totalReferralCommissions","_myTotalReferrals","referralsCount","copyRefLink","text","alert","input","document","createElement","innerHTML","body","appendChild","select","result","execCommand","removeChild"],"mappings":"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","sourcesContent":["import React,{useCallback, useEffect,useState} from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Heading, Skeleton, Text } from '@lukkasromero/cswap-uikit'\nimport {useReferralContract} from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content:space-between;\n`\n\nconst ReferralCard = () => {\n\n  const { account } = useWallet()\n\n  const [yourReferree,setYourReferree] = useState(\"-\")\n  const [yourEarnings,setYourEarnings] = useState(0)\n  const [yourTotalReferrals,setYourTotalReferrals] = useState(0)\n  const [myRefLink,setMyRefLink] = useState(\"hii\")\n\n\n  const referralContract = useReferralContract();\n\n\n \n\n\n\n  const loadData = useCallback(async() => {\n    if(referralContract && account){\n      let _myReferral = await referralContract.methods.getReferrer(account).call();\n      const _myEarnings = await referralContract.methods.totalReferralCommissions(account).call();\n      const _myTotalReferrals = await referralContract.methods.referralsCount(account).call();\n      if(_myReferral === \"0x0000000000000000000000000000000000000000\"){\n        _myReferral = \"-\"\n      }\n      setYourReferree(_myReferral)\n      setYourEarnings(_myEarnings/1e18)\n      setYourTotalReferrals(_myTotalReferrals)\n\n      setMyRefLink(`https://cswap.app?ref=${account}`)\n    }\n  \n\n  }, [referralContract,account]) \n\n\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n \n  const  copyRefLink=(text:any) =>{\n\n    if(!account){\n      alert(\"Please Connect Your Wallet First\")\n      return null\n    }\n    const input = document.createElement('textarea');\n    input.innerHTML = text;\n    document.body.appendChild(input);\n    input.select();\n    const result = document.execCommand('copy');\n    document.body.removeChild(input);\n    alert(\"Referral Link copied\")\n    return result;\n}\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          Referral Details\n        </Heading>\n        <>\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n          {/* <Heading size=\"xl\"> */}\n          <Text color=\"textSubtle\">Total Referral Earnings</Text>\n\n          <CardValue value={yourEarnings} prefix=\"LOLI \" decimals={2} />\n\n          <Text color=\"textSubtle\">Total Referrals</Text>\n\n          <CardValue value={yourTotalReferrals} prefix=\"\" decimals={0} />\n\n          {/* </Heading> */}\n\n          <Text color=\"textSubtle\">Your Referee</Text>\n\n<Text bold fontSize=\"20px\">\n  {yourReferree}\n</Text>\n<Button onClick={()=>{\n  copyRefLink(myRefLink)\n}}>Copy Your Referral Link</Button>\n        </>\n      </CardBody>\n      {/* <CardBody>\n       \n      </CardBody> */}\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default ReferralCard\n"]},"metadata":{},"sourceType":"module"}