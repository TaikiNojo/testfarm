{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Presale/components/CountdownCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Heading, Card, CardBody, Text } from '@lukkasromero/cswap-uikit';\nimport Countdown from 'react-countdown';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { useStartingTimeStamp } from 'hooks/usePresale';\nconst StyledCard = styled(Card)`\n    padding-left: 48px;\n    padding-right: 48px;\n    @media screen and (max-width: 540px) {\n        padding-left: 12px;\n        padding-right: 12px;\n    }\n`;\n_c = StyledCard;\nconst StyleNumber = styled(Heading)`\n  font-size: 48px;\n  margin-bottom: 36px;\n  color: #fbe94d;\n`;\n_c2 = StyleNumber;\nconst StyleHeading = styled(Heading)`\n  font-size: 30px;\n  margin-bottom: 36px;\n`;\n_c3 = StyleHeading;\nconst StyleText = styled(Text)`\n    \n`;\n_c4 = StyleText;\n\nconst CountdownCard = () => {\n  _s();\n\n  const endTimeStamp = new BigNumber(useStartingTimeStamp()).toNumber();\n  const now = new Date().getTime() / 1000;\n  const endTime = 60 * 60 * 24 * 6;\n\n  const endCountDownRenderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return /*#__PURE__*/_jsxDEV(StyleText, {\n        children: \"PRESALE END\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this);\n    } // Render a countdown\n\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyleHeading, {\n        size: \"lg\",\n        as: \"h1\",\n        children: \"END OF PRESALE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyleNumber, {\n        as: \"h1\",\n        size: \"lg\",\n        children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyleText, {\n        children: \"Days:Hours:Minutes:Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  const startCountDownRenderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a completed state\n      return null;\n    } // Render a countdown\n\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyleHeading, {\n        size: \"lg\",\n        as: \"h1\",\n        children: \"PRESALE ENDS IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyleNumber, {\n        as: \"h1\",\n        size: \"lg\",\n        children: [days, \" : \", hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyleText, {\n        children: \"Days : Hours : Minutes : Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Countdown, {\n        date: new Date(endTimeStamp * 1000),\n        renderer: endCountDownRenderer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountdownCard, \"3Y0OO9hZwiSKvshAGkCkEjNg0As=\", false, function () {\n  return [useStartingTimeStamp];\n});\n\n_c5 = CountdownCard;\nexport default CountdownCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyleNumber\");\n$RefreshReg$(_c3, \"StyleHeading\");\n$RefreshReg$(_c4, \"StyleText\");\n$RefreshReg$(_c5, \"CountdownCard\");","map":{"version":3,"sources":["/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Presale/components/CountdownCard.tsx"],"names":["React","Heading","Card","CardBody","Text","Countdown","BigNumber","styled","useStartingTimeStamp","StyledCard","StyleNumber","StyleHeading","StyleText","CountdownCard","endTimeStamp","toNumber","now","Date","getTime","endTime","endCountDownRenderer","days","hours","minutes","seconds","completed","startCountDownRenderer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Heading, Card, CardBody, Text } from '@lukkasromero/cswap-uikit'\r\nimport Countdown from 'react-countdown';\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useStartingTimeStamp } from 'hooks/usePresale'\r\n\r\nconst StyledCard = styled(Card)`\r\n    padding-left: 48px;\r\n    padding-right: 48px;\r\n    @media screen and (max-width: 540px) {\r\n        padding-left: 12px;\r\n        padding-right: 12px;\r\n    }\r\n`\r\n\r\nconst StyleNumber = styled(Heading)`\r\n  font-size: 48px;\r\n  margin-bottom: 36px;\r\n  color: #fbe94d;\r\n`\r\n\r\nconst StyleHeading = styled(Heading)`\r\n  font-size: 30px;\r\n  margin-bottom: 36px;\r\n`\r\n\r\nconst StyleText = styled(Text)`\r\n    \r\n`\r\n\r\nconst CountdownCard = () => {\r\n    const endTimeStamp = new BigNumber(useStartingTimeStamp()).toNumber()\r\n    const now = new Date().getTime() / 1000\r\n    const endTime = 60 * 60 * 24 * 6\r\n\r\n    const endCountDownRenderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n          // Render a completed state\r\n          return <StyleText>PRESALE END</StyleText>\r\n        } \r\n        // Render a countdown\r\n        return <>\r\n            <StyleHeading size=\"lg\" as=\"h1\">END OF PRESALE</StyleHeading>\r\n            <StyleNumber as=\"h1\" size=\"lg\">{days} : {hours} : {minutes} : {seconds}</StyleNumber>\r\n            <StyleText>Days:Hours:Minutes:Seconds</StyleText>\r\n            </>\r\n        \r\n    };\r\n\r\n    const startCountDownRenderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n          // Render a completed state\r\n          return null;\r\n        } \r\n        // Render a countdown\r\n        return <>\r\n            <StyleHeading size=\"lg\" as=\"h1\">PRESALE ENDS IN</StyleHeading>\r\n            <StyleNumber as=\"h1\" size=\"lg\">{days} : {hours} : {minutes} : {seconds}</StyleNumber>\r\n            <StyleText>Days : Hours : Minutes : Seconds</StyleText>\r\n            </>\r\n    };\r\n\r\n    return (\r\n        <StyledCard>\r\n            <CardBody>\r\n                <Countdown date={new Date(endTimeStamp* 1000)} renderer={endCountDownRenderer} />\r\n\r\n            </CardBody>\r\n        </StyledCard>  \r\n    )\r\n}\r\n\r\nexport default CountdownCard\r\n\r\n"]},"metadata":{},"sourceType":"module"}