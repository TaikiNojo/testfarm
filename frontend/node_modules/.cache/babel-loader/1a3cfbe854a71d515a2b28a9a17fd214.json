{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nimport Cookies from 'universal-cookie'; // import rot13 from './encode'\n\nimport { isAddress } from './web3';\nconst cookies = new Cookies();\n\nfunction rot13(s) {\n  return s.replace(/[A-Z]/gi, c => \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\"[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".indexOf(c)]);\n}\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n    from: account\n  });\n};\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  let ref;\n\n  if (cookies.get('ref')) {\n    if (isAddress(rot13(cookies.get('ref')))) {\n      ref = rot13(cookies.get('ref'));\n    }\n  } else {\n    ref = \"0x0000000000000000000000000000000000000000\";\n  }\n\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), ref).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.emergencyWithdraw().send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const harvest = async (masterChefContract, pid, account) => {\n  let ref;\n\n  if (cookies.get('ref')) {\n    if (isAddress(rot13(cookies.get('ref')))) {\n      ref = rot13(cookies.get('ref'));\n    }\n  } else {\n    ref = \"0x0000000000000000000000000000000000000000\";\n  }\n\n  return masterChefContract.methods.deposit(pid, '0', ref).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit('0').send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    value: new BigNumber(0)\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const buy = async (presaleContract, tokenAddress, amount, account) => {\n  return presaleContract.methods.buyToken().send({\n    from: account,\n    value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const claim = async (presaleContract, account) => {\n  return presaleContract.methods.claimGoldIngot().send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};","map":{"version":3,"sources":["/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","Cookies","isAddress","cookies","rot13","s","replace","c","indexOf","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","ref","get","deposit","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","buy","presaleContract","tokenAddress","buyToken","claim","claimGoldIngot"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport Cookies from 'universal-cookie';\r\n// import rot13 from './encode'\r\nimport { isAddress } from './web3'\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\n\r\nfunction rot13(s) {\r\n  return s.replace(/[A-Z]/gi, c =>\r\n    \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\"[\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".indexOf(c) ] )\r\n}\r\n\r\n\r\n\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0', ref)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const buy = async (presaleContract, tokenAddress, amount, account) => {\r\n  return presaleContract.methods\r\n    .buyToken()\r\n    .send({ from: account,value:new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (presaleContract, account) => {\r\n  return presaleContract.methods\r\n    .claimGoldIngot()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n} "]},"metadata":{},"sourceType":"module"}