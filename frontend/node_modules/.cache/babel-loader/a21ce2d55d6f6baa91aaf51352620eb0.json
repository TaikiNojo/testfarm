{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Home/components/AuditCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, Heading } from '@lukkasromero/cswap-uikit';\nimport { useReferralContract } from 'hooks/useContract';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content:space-between;\n`;\n_c = StyledTotalValueLockedCard;\n\nconst AuditCard = () => {\n  _s();\n\n  const {\n    account\n  } = useWallet();\n  const [yourReferree, setYourReferree] = useState(\"-\");\n  const [yourEarnings, setYourEarnings] = useState(0);\n  const [yourTotalReferrals, setYourTotalReferrals] = useState(0);\n  const [myRefLink, setMyRefLink] = useState(\"hii\");\n  const referralContract = useReferralContract();\n  const loadData = useCallback(async () => {\n    if (referralContract && account) {\n      let _myReferral = await referralContract.methods.getReferrer(account).call();\n\n      const _myEarnings = await referralContract.methods.totalReferralCommissions(account).call();\n\n      const _myTotalReferrals = await referralContract.methods.referralsCount(account).call();\n\n      if (_myReferral === \"0x0000000000000000000000000000000000000000\") {\n        _myReferral = \"-\";\n      }\n\n      setYourReferree(_myReferral);\n      setYourEarnings(_myEarnings / 1e18);\n      setYourTotalReferrals(_myTotalReferrals);\n      setMyRefLink(`https://cswap.app?ref=${account}`);\n    }\n  }, [referralContract, account]);\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const copyRefLink = text => {\n    if (!account) {\n      alert(\"Please Connect Your Wallet First\");\n      return null;\n    }\n\n    const input = document.createElement('textarea');\n    input.innerHTML = text;\n    document.body.appendChild(input);\n    input.select();\n    const result = document.execCommand('copy');\n    document.body.removeChild(input);\n    alert(\"Referral Link copied\");\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTotalValueLockedCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: \"24px\",\n        children: \"Audited By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"techrate\",\n          src: \"/images/techrate.png\",\n          width: 250\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"rug doc\",\n          src: \"https://rugdoc.io/assets/2021/05/rugdoc-review-badge-for-light-bg.png\",\n          width: 250\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuditCard, \"Njm7vhS+q5tbc7FEL63iqPjMl30=\", false, function () {\n  return [useWallet, useReferralContract];\n});\n\n_c2 = AuditCard;\nexport default AuditCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTotalValueLockedCard\");\n$RefreshReg$(_c2, \"AuditCard\");","map":{"version":3,"sources":["/home/musashi_daryl/Data/musashi_daryl/SOLIDITY/testfarm/frontend/src/views/Home/components/AuditCard.tsx"],"names":["React","useCallback","useEffect","useState","styled","Card","CardBody","Heading","useReferralContract","useWallet","StyledTotalValueLockedCard","AuditCard","account","yourReferree","setYourReferree","yourEarnings","setYourEarnings","yourTotalReferrals","setYourTotalReferrals","myRefLink","setMyRefLink","referralContract","loadData","_myReferral","methods","getReferrer","call","_myEarnings","totalReferralCommissions","_myTotalReferrals","referralsCount","copyRefLink","text","alert","input","document","createElement","innerHTML","body","appendChild","select","result","execCommand","removeChild"],"mappings":"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","sourcesContent":["import React,{useCallback, useEffect,useState} from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Heading, Skeleton, Text } from '@lukkasromero/cswap-uikit'\nimport {useReferralContract} from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content:space-between;\n`\n\nconst AuditCard  = () => {\n\n  const { account } = useWallet()\n\n  const [yourReferree,setYourReferree] = useState(\"-\")\n  const [yourEarnings,setYourEarnings] = useState(0)\n  const [yourTotalReferrals,setYourTotalReferrals] = useState(0)\n  const [myRefLink,setMyRefLink] = useState(\"hii\")\n\n\n  const referralContract = useReferralContract();\n\n\n \n\n\n\n  const loadData = useCallback(async() => {\n    if(referralContract && account){\n      let _myReferral = await referralContract.methods.getReferrer(account).call();\n      const _myEarnings = await referralContract.methods.totalReferralCommissions(account).call();\n      const _myTotalReferrals = await referralContract.methods.referralsCount(account).call();\n      if(_myReferral === \"0x0000000000000000000000000000000000000000\"){\n        _myReferral = \"-\"\n      }\n      setYourReferree(_myReferral)\n      setYourEarnings(_myEarnings/1e18)\n      setYourTotalReferrals(_myTotalReferrals)\n\n      setMyRefLink(`https://cswap.app?ref=${account}`)\n    }\n  \n\n  }, [referralContract,account]) \n\n\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n \n  const  copyRefLink=(text:any) =>{\n\n    if(!account){\n      alert(\"Please Connect Your Wallet First\")\n      return null\n    }\n    const input = document.createElement('textarea');\n    input.innerHTML = text;\n    document.body.appendChild(input);\n    input.select();\n    const result = document.execCommand('copy');\n    document.body.removeChild(input);\n    alert(\"Referral Link copied\")\n    return result;\n}\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          Audited By \n        </Heading>\n        <>\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\n          {/* <Heading size=\"xl\"> */}\n          <img  alt=\"techrate\" src=\"/images/techrate.png\"   width={250}/>\n         \n          <img  alt=\"rug doc\" src=\"https://rugdoc.io/assets/2021/05/rugdoc-review-badge-for-light-bg.png\" width={250}/>\n\n          {/* </Heading> */}\n        </>\n      </CardBody>\n    \n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default AuditCard\n"]},"metadata":{},"sourceType":"module"}